package hibernate;
// Generated 08-Aug-2017 14:17:43 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DemoOrders generated by hbm2java
 */
@Entity
@Table(name="DEMO_ORDERS"
    ,schema="MONIR"
)
public class DemoOrders  implements java.io.Serializable {


     private BigDecimal orderId;
     private DemoUsers demoUsers;
     private DemoCustomers demoCustomers;
     private BigDecimal orderTotal;
     private Date orderTimestamp;
     private Set demoOrderItemses = new HashSet(0);

    public DemoOrders() {
    }

	
    public DemoOrders(BigDecimal orderId, DemoCustomers demoCustomers) {
        this.orderId = orderId;
        this.demoCustomers = demoCustomers;
    }
    public DemoOrders(BigDecimal orderId, DemoUsers demoUsers, DemoCustomers demoCustomers, BigDecimal orderTotal, Date orderTimestamp, Set demoOrderItemses) {
       this.orderId = orderId;
       this.demoUsers = demoUsers;
       this.demoCustomers = demoCustomers;
       this.orderTotal = orderTotal;
       this.orderTimestamp = orderTimestamp;
       this.demoOrderItemses = demoOrderItemses;
    }
   
     @Id 

    
    @Column(name="ORDER_ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getOrderId() {
        return this.orderId;
    }
    
    public void setOrderId(BigDecimal orderId) {
        this.orderId = orderId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="USER_ID")
    public DemoUsers getDemoUsers() {
        return this.demoUsers;
    }
    
    public void setDemoUsers(DemoUsers demoUsers) {
        this.demoUsers = demoUsers;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CUSTOMER_ID", nullable=false)
    public DemoCustomers getDemoCustomers() {
        return this.demoCustomers;
    }
    
    public void setDemoCustomers(DemoCustomers demoCustomers) {
        this.demoCustomers = demoCustomers;
    }

    
    @Column(name="ORDER_TOTAL", precision=8)
    public BigDecimal getOrderTotal() {
        return this.orderTotal;
    }
    
    public void setOrderTotal(BigDecimal orderTotal) {
        this.orderTotal = orderTotal;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ORDER_TIMESTAMP", length=7)
    public Date getOrderTimestamp() {
        return this.orderTimestamp;
    }
    
    public void setOrderTimestamp(Date orderTimestamp) {
        this.orderTimestamp = orderTimestamp;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="demoOrders")
    public Set getDemoOrderItemses() {
        return this.demoOrderItemses;
    }
    
    public void setDemoOrderItemses(Set demoOrderItemses) {
        this.demoOrderItemses = demoOrderItemses;
    }




}


